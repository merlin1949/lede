# =================================================
# OpenWrt x86 本地 Runner 编译配置文件（优化版）
# - 2024-04-20 更新
# - 修复日志记录 & 单线程编译
# =================================================

name: OpenWRT_Local_Runner

on:
  workflow_dispatch:
  push:
    branches: [ master ]

env:
  CCACHE_DIR: /tmp/ccache
  TARGET: x86
  SUBTARGET: 64
  FIRMWARE_DIR: lede/bin/targets/x86/64

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: 🔄 拉取源码
      uses: actions/checkout@v4
      with:
        path: lede
        submodules: recursive
        fetch-depth: 1  # 只拉取最新版本，加快速度

    - name: 📦 加载缓存
      uses: actions/cache@v3
      id: cache
      with:
        path: |
          ${{ env.CCACHE_DIR }}
          lede/dl  # 不缓存 build_dir，防止旧缓存导致错误

    - name: 📦 安装编译工具
      run: |
        echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S apt-get update -y
        echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S apt-get install -y build-essential clang flex bison g++ gawk gcc-multilib \
        gettext git libncurses5-dev libssl-dev python3 python3-pip rsync unzip zlib1g-dev \
        libelf-dev liblzma-dev lib32z1-dev pkg-config autoconf ncurses-term ncurses-base
        echo "TERM=linux" >> $GITHUB_ENV
        echo "TERMINFO=/usr/share/terminfo" >> $GITHUB_ENV

    - name: 🛠️ 安装 po2lmo
      run: |
        cd lede
        if [ -d package/lean/default-settings/tools/po2lmo ]; then
          pushd package/lean/default-settings/tools/po2lmo
          make && sudo make install
          popd
        else
          echo "❌ po2lmo 源码不存在，跳过编译"
        fi

    - name: ⚙️ 生成配置
      run: |
        cd lede
        [ -f .config ] && cp .config .config.bak || true
        make defconfig

    - name: 🔨 开始编译（单线程）
      run: |
        cd lede
        mkdir -p tmp/work/logs
        set -o pipefail
        time make -j1 V=sc 2>&1 | tee build.log tmp/work/logs/full.log  # 改为单线程

        # 确保固件生成
        ls $FIRMWARE_DIR/*.img >/dev/null 2>&1 || (echo "❌ 固件未生成"; exit 1)

    - name: 📦 打包输出
      run: |
        cd lede
        RELEASE_NAME="openwrt_x86_$(date +'%Y%m%d_%H%M')"
        mkdir -p $RELEASE_NAME
        cp $FIRMWARE_DIR/*.{img,sha256sum} $RELEASE_NAME/
        cp build.log $RELEASE_NAME/
        tar -czvf $RELEASE_NAME.tar.gz $RELEASE_NAME

    - name: ⬆️ 上传固件
      uses: actions/upload-artifact@v4
      with:
        name: openwrt-x86
        path: "lede/*.tar.gz"
        retention-days: 7

    - name: 🚨 上传错误日志
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: error-logs
        path: |
          lede/build.log
          lede/tmp/work/logs/*.log
