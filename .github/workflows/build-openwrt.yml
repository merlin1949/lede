name: Build OpenWrt (Lede)

# 触发方式：
# - 手动触发 (workflow_dispatch)
# - 定期触发 (每周自动编译)
on:
  workflow_dispatch:  # 允许手动点击运行
  schedule:
    - cron: "0 0 * * 0"  # 每周日 00:00 触发编译 (可根据需求调整)

jobs:
  build:
    runs-on: ubuntu-latest  # GitHub Actions 运行环境
    container: ubuntu:22.04  # 在 Ubuntu 22.04 容器中运行，确保稳定

    steps:
      # 1️⃣ **拉取 OpenWrt Lede 源码**
      - name: Checkout Lede Source
        uses: actions/checkout@v4
        with:
          repository: coolsnowwolf/lede  # Lede 源码仓库
          ref: master  # 分支
          submodules: true  # 获取子模块，确保完整性

      # 2️⃣ **安装编译所需的环境**
      - name: Setup Build Environment
        run: |
          apt update && apt install -y \
            build-essential libncurses5-dev gawk git \
            gettext unzip file libssl-dev wget python3 \
            ccache  # 使用 ccache 加速重复编译

      # 3️⃣ **恢复缓存：包括 ccache 和 dl（依赖下载目录）**
      - name: Restore Cache (DL & ccache)
        uses: actions/cache@v4
        with:
          path: |
            dl  # 依赖包下载缓存
            ~/.ccache  # 编译缓存
          key: openwrt-${{ runner.os }}-${{ github.run_id }}
          restore-keys: |
            openwrt-${{ runner.os }}-

      # 4️⃣ **更新并安装 OpenWrt 组件**
      - name: Update and Install Feeds
        run: |
          ./scripts/feeds update -a  # 更新 feeds
          ./scripts/feeds install -a  # 安装 feeds 中的所有软件包

      # 5️⃣ **应用 `.config` 配置文件**
      - name: Apply Custom Config
        run: |
          [ -e .config ] && cp .config .config.backup  # 备份原有 config
          make defconfig  # 解析 config 文件，确保配置完整

      # 6️⃣ **提前下载所有编译所需依赖**
      - name: Pre-download Packages (Speed up Build)
        run: make download -j$(nproc) || true  # 预下载依赖，避免编译时因网络问题失败

      # 7️⃣ **开始编译 OpenWrt**
      - name: Compile OpenWrt
        run: |
          export CCACHE_DIR=~/.ccache  # 设置 ccache 目录
          export CONFIG_CCACHE=y  # 启用 ccache 加速编译
          make -j$(nproc) V=s  # 使用所有 CPU 核心进行编译

      # 8️⃣ **上传编译后的固件**
      - name: Upload Firmware
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-firmware  # 固件名称
          path: bin/targets/  # OpenWrt 固件输出目录
          compression-level: 0  # 关闭压缩，提高上传速度

      # 9️⃣ **清理缓存，避免 GitHub 存储占用过多**
      - name: Cleanup Cache (Optional)
        run: |
          rm -rf dl  # 删除下载的依赖包，释放空间
          rm -rf ~/.ccache  # 删除 ccache 编译缓存，防止 GitHub Actions 存储被占满
