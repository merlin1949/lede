name: Build OpenWrt (Lede)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"

jobs:
  build:
    runs-on: ubuntu-latest
    container: ubuntu:22.04

    steps:
      # 1️⃣ **安装 Git 2.18+，确保 `submodules` 支持**
      - name: Install Git 2.18+
        run: |
          apt update && apt install -y git

      # 2️⃣ **完整克隆 Lede 源码**
      - name: Clone Lede Repository
        run: |
          git clone --depth=1 --recurse-submodules https://github.com/coolsnowwolf/lede.git lede
          cd lede
          git submodule update --init --recursive

      # 3️⃣ **安装编译所需的环境**
      - name: Setup Build Environment
        run: |
          apt update && apt install -y \
            build-essential libncurses5-dev gawk git rsync \
            gettext unzip file libssl-dev wget python3 \
            python3-distutils ccache  # **增加 rsync 和 python3-distutils**

      # 4️⃣ **恢复缓存（`dl` 依赖包 & `ccache` 编译缓存）**
      - name: Restore Cache (DL & ccache)
        uses: actions/cache@v4
        with:
          path: |
            lede/dl
            ~/.ccache
          key: openwrt-${{ runner.os }}-${{ github.run_id }}
          restore-keys: |
            openwrt-${{ runner.os }}-

      # 5️⃣ **更新并安装 OpenWrt 组件**
      - name: Update and Install Feeds
        run: |
          cd lede
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      # 6️⃣ **应用 `.config` 配置文件**
      - name: Apply Custom Config
        run: |
          cd lede
          [ -e .config ] && cp .config .config.backup
          make defconfig

      # 7️⃣ **提前下载所有编译所需依赖**
      - name: Pre-download Packages (Speed up Build)
        run: |
          cd lede
          make download -j$(nproc) || true

      # 8️⃣ **开始编译 OpenWrt**
      - name: Compile OpenWrt
        run: |
          cd lede
          export CCACHE_DIR=~/.ccache
          export CONFIG_CCACHE=y
          make -j$(nproc) V=s

      # 9️⃣ **上传编译后的固件**
      - name: Upload Firmware
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-firmware
          path: lede/bin/targets/
          compression-level: 0

      # 🔟 **清理缓存，避免 GitHub 存储占用过多**
      - name: Cleanup Cache (Optional)
        run: |
          rm -rf lede/dl
          rm -rf ~/.ccache
