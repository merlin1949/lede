name: Build OpenWrt (Lede)

on:
  workflow_dispatch:  # **允许手动点击运行**
  schedule:
    - cron: "0 0 * * 0"  # **每周日 00:00 触发编译 (可调整)**

jobs:
  build:
    runs-on: ubuntu-latest
    container: ubuntu:22.04  # **固定 Ubuntu 22.04 版本**
    steps:
      # 1️⃣ **安装 Git**
      - name: Install Git 2.18+
        run: |
          apt update && apt install -y git

      # 2️⃣ **完整克隆 Lede 源码**
      - name: Clone Lede Repository
        run: |
          git clone --depth=1 --recurse-submodules https://github.com/coolsnowwolf/lede.git lede
          cd lede
          git submodule update --init --recursive

      # 3️⃣ **安装编译所需的环境**
      - name: Install Dependencies
        run: |
          apt update && apt install -y \
            build-essential libncurses5-dev gawk git rsync \
            gettext unzip file libssl-dev wget python3 \
            python3-distutils ccache libelf-dev  # **修复 libelf.so.1 问题**

      # 4️⃣ **恢复缓存**
      - name: Restore Cache
        uses: actions/cache@v4
        with:
          path: |
            lede/dl  
            ~/.ccache
          key: openwrt-${{ runner.os }}-${{ github.run_id }}
          restore-keys: |
            openwrt-${{ runner.os }}-

      # 5️⃣ **更新并安装 OpenWrt 组件**
      - name: Update and Install Feeds
        run: |
          cd lede
          ./scripts/feeds update -a  
          ./scripts/feeds install -a  

      # 🔹 **运行 diy-part1.sh（修改插件和默认配置）**
      - name: Run diy-part1.sh
        run: |
          cd lede  # **确保在 lede 目录内**
          chmod +x ../diy-part1.sh
          ../diy-part1.sh

      # 🔹 **运行 diy-part2.sh（配置 .config）**
      - name: Run diy-part2.sh
        run: |
          cd lede  # **确保在 lede 目录内**
          chmod +x ../diy-part2.sh
          ../diy-part2.sh

      # 6️⃣ **应用 `.config` 配置文件**
      - name: Apply Custom Config
        run: |
          cd lede
          [ -e .config ] && cp .config .config.backup  
          make defconfig  

      # 7️⃣ **先编译工具链，避免 `world` 失败**
      - name: Compile Toolchain
        run: |
          cd lede
          export FORCE_UNSAFE_CONFIGURE=1  
          make tools/install -j2 V=s  

      # 8️⃣ **提前下载所有编译所需依赖**
      - name: Pre-download Packages
        run: |
          cd lede
          if [ ! -d "dl" ]; then
            make download -j2 || true
          fi

      # 9️⃣ **开始编译 OpenWrt**
      - name: Compile OpenWrt
        run: |
          cd lede
          export FORCE_UNSAFE_CONFIGURE=1  
          export CCACHE_DIR=~/.ccache  
          export CONFIG_CCACHE=y  
          make -j2 V=s  # **改为 -j2，防止 GitHub Actions 内存溢出**

      # 🔟 **上传编译后的固件**
      - name: Upload Firmware
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-firmware  
          path: lede/bin/targets/  
          compression-level: 0  

      # 🔟 **上传日志（如果编译失败，方便分析）**
      - name: Upload Build Logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: lede/logs/

      # 🔟 **清理缓存**
      - name: Cleanup Cache
        run: |
          rm -rf lede/dl  
          rm -rf ~/.ccache  
